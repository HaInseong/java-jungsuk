package ch11;

/**
 * 배열의 장단점
 * 장점: 배열은 구조가 간단하고 데이터를 읽는 데 걸리시는 시간이 짧다.
 * 단점 1: 프로그램 실행 중에 크기를 변경할 수 없다.
 * - 크기를 변경해야 하는 경우 새로운 배열을 생성 후 데이터를 복사해야 함.
 * 크기를 변경하려면?
 * 1. 더 큰 배열 생성
 * 2. 기존 배열 복사
 * 3. 참조 변경
 * - 크기 변경을 피하기 위해 충분히 큰 배열을 생성하면, 메모리가 낭비 됨.
 * 단점 2: 비순차적인(배열 중간 데이터 삭제 또는 추가) 데이터의 추가, 삭제에 시간이 많이 걸린다.
 * - 데이터를 추가하거나 삭제하기 위해, 다른 데이터를 옮겨야 함.
 * - 그러나 순차적인 데이터 추가(끝에 추가)와 삭제(끝부터 삭제)는 빠르다.
 */

/**
 * LinkedList - 배열의 단점을 보완(크기 변경 불가, 추가 삭제 시간 많이 걸림)
 * 배열과 달리 LinkedList는 불연속적으로 존재하는 데이터를 연결(link)
 * 자신의 데이터와 다음 노드가 어디있는지 참조변수를 가지고 있다.
 * 단점: 불연속적이라 자기 다음 노드의 위치밖에 모름, 그래서 데이터 접근성이 나쁨.
 * Doubly LinkedList: 이전 노드의 위치까지 저장하는 참조변수를 가지고 있다.
 * Doubly Circular LinkedList: 첫노드의 이전 참조 변수에 가장 마지막 노드의 주소가 저장된다.(실제 사용 X)
 */

/**
 * ArrayList vs LinkedList < 배열 기반 vs 연결 기반 >
 * 1. 순차적으로 데이터를 추가/삭제 - ArrayList가 빠름
 * 2. 비순차적으로 데이터를 추가/삭제 - LinkedList가 빠름(대신 순차적인 데이터 추가/삭제는 ArrayList가 빠름)
 * 3. 접근시간 - ArrayList가 빠름 / LinkedList는 노드가 많을수록 하나씩 다 방문해야 한다.
 */
public class Ex11_4_LinkedList {

}
